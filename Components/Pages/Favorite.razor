@page "/favorite"
@using Pokemon.Components.Shared
@using Pokemon.Models
@using Pokemon.Services
@using Pokemon.Services.Interfaces
@inject FavoritePokemonService FavoriteService

<h1 class="page-title">Favorite Pokemon List</h1>

@if (FavoritesList == null)
{
    <p>Loading...</p>
}
else if (FavoritesList.Count == 0)
{
    <p>No favorites added yet.</p>
}
else
{
    <ul class="favorite-list">
        @foreach (var pokemon in FavoritesList)
        {
            <li>
                <div class="pokemon-card" @onclick="() => OpenModal(pokemon)">
                    @if (!string.IsNullOrWhiteSpace(@pokemon.ImageUrl))
                    {
                        <img src="@pokemon.ImageUrl" width="100" />
                    }
                    else
                    {
                        <div class="no-picture-div">
                            <p>Picture not found</p>
                        </div>
                    }

                    <p>@pokemon.Name</p>
                </div>
            </li>
        }
    </ul>
}

<PokemonModal @ref="modalRef" OnClose="CloseModal" />

@code {
    private List<FavoritePokemon>? FavoritesList;
    private PokemonModal? modalRef;

    protected override async Task OnInitializedAsync()
    {
        FavoritesList = await FavoriteService.GetFavoritesAsync();
    }

    private async Task OpenModal(FavoritePokemon pokemon)
    {
        if (modalRef is not null && !string.IsNullOrWhiteSpace(pokemon.Name))
        {
            await modalRef.OpenModal(pokemon.Name);
        }
    }

    private async void CloseModal()
    {
        FavoritesList = await FavoriteService.GetFavoritesAsync();
        StateHasChanged();
    }
}