@using Pokemon.Models
@using Pokemon.Services
@using BlazorBootstrap
@inject FavoritePokemonService FavoriteService

<div class="pokemon-card" @onclick="OpenModal">
    @if (!string.IsNullOrWhiteSpace(Player))
    {
        <p><b>Trainer:</b> @Player</p>
    }

    @if (!string.IsNullOrWhiteSpace(Pokemon.Sprites?.front_default))
    {
        <img src="@Pokemon.Sprites.front_default" width="100" />
    }
    else
    {
        <div class="no-picture-div">
            <p>Picture not found</p>
        </div>
    }

    <p class="capitalize">@Pokemon.Name</p>

    <button class="favorite" @onclick="ToggleFavorite">
        <i class="@(IsFavorite ? "bi bi-x" : "bi bi-heart-fill")"></i>
        @(IsFavorite ? " Unfavorite" : " Add to Favorites")
    </button>

</div>

@code {
    [Parameter, EditorRequired] public Models.Pokemon Pokemon { get; set; } = default!;
    [Parameter] public PokemonModal? ModalRef { get; set; }

    [Parameter] public string? Player { get; set; }
    [Parameter] public string BattleResult { get; set; } = "";

    private bool IsFavorite;

    protected override async Task OnInitializedAsync()
    {
        var favorites = await FavoriteService.GetFavoritesAsync();
        IsFavorite = favorites.Any(p => p.Name == Pokemon.Name);
    }

    private async Task ToggleFavorite()
    {
        if (IsFavorite)
        {
            await FavoriteService.RemoveFavoriteAsync(Pokemon.Id);
        }
        else
        {
            await FavoriteService.AddFavoriteAsync(Pokemon.Id, Pokemon.Name, Pokemon.Sprites.front_default);
        }

        IsFavorite = !IsFavorite;
    }

    private async Task OpenModal()
    {
        if (Player == null){
            await ModalRef.OpenModal(Pokemon.Name);
        }
    }
}
